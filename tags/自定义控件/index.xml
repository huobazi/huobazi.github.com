<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自定义控件 on 武眉博</title>
    <link>https://huobazi.github.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/</link>
    <description>Recent content in 自定义控件 on 武眉博</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 05 Aug 2007 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://huobazi.github.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>自定义控件实现广告内容后期加载，以及NamingContainer层次的应用</title>
      <link>https://huobazi.github.com/blog/2007/08/05/advertisementlazyloadingcontrol/</link>
      <pubDate>Sun, 05 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.github.com/blog/2007/08/05/advertisementlazyloadingcontrol/</guid>
      <description>&lt;p&gt;自定义控件：广告内容后期加载。以及NamingContainer层次的应用&lt;br /&gt;网站上的广告内容可能会因加载过慢而导致整个网页加载过慢&lt;br /&gt;我们可以考虑将广告内全部放在网页最底部，等整个页面加载完毕後&lt;br /&gt;再采用javascript使其显示，考虑给控件一个TargetContainerID标识&lt;br /&gt;控件广告内容将要被显示的容器ID，然后从控件自己所处的 开始向上查找该ID&lt;br /&gt;所指定的控件，(我们只向上找而没有向下找，并且没有处理某层次的&lt;br /&gt;子NamingContainer,所以不一定能够找到，这里没有考虑从Page对象向下递归查找&lt;br /&gt;主要考虑为了提高性能),如果没有找到，则考虑给用户一个事件让用户自己处理TargetContainer&lt;/p&gt;
&lt;p&gt;下面的自定义控件对此实现了封装:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在自定义控件中实现ICallbackEventHandler接口不经过回发而实现客户端回掉</title>
      <link>https://huobazi.github.com/blog/2007/07/23/webcontrolandicallbackeventhandler/</link>
      <pubDate>Mon, 23 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.github.com/blog/2007/07/23/webcontrolandicallbackeventhandler/</guid>
      <description>在自定义控件中实现ICallbackEventHandler接口不经过回发而实现客户端回掉 Asp.Net2.0中新增了ICallbackEventHandler接口，用于指示控件可以作为服务器的回调事件的目标。
MSDN中的描述:
实现 ICallbackEventHandler 接口的控件的示例包括 GridView、DetailsView 和 TreeView 控件。当回调事件以实现了 ICallbackEventHandler 接口的控件为目标时，将把事件变量作为参数传递来调用 RaiseCallbackEvent 方法以处理该事件，并且GetCallbackResult 方法返回回调的结果。
ICallbackEventHandler成员有：
  
 

  
名称 

  
说明 

    

  
GetCallbackResult 

  
返回以控件为目标的回调事件的结果。 

    

  
RaiseCallbackEvent 

  
处理以控件为目标的回调事件。</description>
    </item>
    
    <item>
      <title>在写自定义控件时，如果控件某个属性允许被验证控件验证，需要注意微软在 WebUIValidation.js内的实现。</title>
      <link>https://huobazi.github.com/blog/2006/12/01/customwebcontrolandwebuivalidationjs/</link>
      <pubDate>Fri, 01 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.github.com/blog/2006/12/01/customwebcontrolandwebuivalidationjs/</guid>
      <description>微软在WebUIValidation.js(System.Web的资源文件内自己找工具看吧)
内有如下代码：
functionValidatorGetValue(id) {
varcontrol;
control =document.getElementById(id);
if(typeof(control.value) ==&#34;string&#34;) {
returncontrol.value;
}
returnValidatorGetValueRecursive(control);
}
functionValidatorGetValueRecursive(control)
{
if(typeof(control.value) ==&#34;string&#34;&amp;amp;&amp;amp;(control.type !=&#34;radio&#34;||control.checked ==true)) {
returncontrol.value;
}
vari, val;
for(i =0; i&amp;lt;control.childNodes.length; i++) {
val =ValidatorGetValueRecursive(control.childNodes[i]);
if(val !=&#34;&#34;) returnval;
}
return&#34;&#34;;
}  
当自定义控件为符合控件，比如两个或多个DropDownList组合而成
而有一个Value属性来返回这几个DropDownList的返回选项，并且设置了ValidationPropertyAttribute去验证某个属性，如：
[ValidationPropertyAttribute( &#34;Value&#34; )]
当使用验证控件验证的时候，由于上面脚本在控件没有客户端value的时候返回的为第一个value不为空的ChildNode的value
值，这样用来验证，可能不是我们所需要的。
比如我需要非空验证控件来验证我的自定义控件所有的DropDownList都必须被选择时候，如果第一个有了选择，则该脚本认为验证通过了，叶面可以PostBack然而，在服务器端Page.IsValidata属性是false的。
我用了一个非常ugly的方法，在控件外层放一个父容器（可以通过override TagKey 来指定）span
在每个DropDownList的客户端onchange的时候 判断 如果 任一个没有选择，那么置span的value = ‘’；
当全部选择的时候再将span.value = 实际的值 ，这样就不会出现客户端验证通过，然而服务器端验证没有通过才出来ErrorMessage的情况了。
但是总觉得 这样非常的ugly,如果有其他朋友也遇到过这样的问题，欢迎讨论。</description>
    </item>
    
    <item>
      <title>可以弹出确认对话框的自定义Web服务器控件ConfirmButton</title>
      <link>https://huobazi.github.com/blog/2004/04/30/confirmbutton/</link>
      <pubDate>Fri, 30 Apr 2004 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.github.com/blog/2004/04/30/confirmbutton/</guid>
      <description>经常在论坛里看到类似这样的问题：“…如何在点击删除按钮的时候弹出个确认删除对话框”。
下面我们来自己写一个这样的自定义Web服务器控件!
思路如下：
继承System.Web.UI.WebControls.Button控件
增加一个属性“ConfirmMessage”来表示弹出确认框上面的提示信息。
在服务器控件呈现在页面之前把一段javascript写到页面
内容如下：
&amp;lt;script language=&#34;JavaScript&#34;&amp;gt;

&amp;lt;!--

function _doAspxBoyConfirm()

{

return confirm(&#34;你确认删除/保存吗??&#34;)

}

//--&amp;gt;

&amp;lt;/script&amp;gt;

查一下msdn中对于Control.OnPreRender方法的描述

可以得到“此方法通知服务器控件在保存视图状态和呈现内容之前，执行任何必要的预呈现步骤”.
所以我们只要在OnPreRender方法内用Page.RegisterClientScriptBlock把这段javascript发送到客户端，并且给Button. Attributes属性内添加一个“onclick”的客户端属性对应值为: &#34;return _doAspxBoyConfirm()”.
详细情况可以查阅
ms-help://MS.VSCC.2003/MS.MSDNQTR.2003FEB.2052/cpref/html/frlrfsystemwebuiwebcontrolswebcontrolclassattributestopic.htm
这样一个具有ConFirm功能的Button就基本上建立起来了。
新建一个测试该控件的工程
在工具箱上点右键选择“添加/移除项”，点击浏览选择编译好的dll文件，点击确定，你会发现ConFirmButton已经添加到工具箱内了
将其托到一个Aspx页面内 在属性设置内给ConfirmMessage值为你要的弹出框内容比如“确定删除吗?”，按F5运行。
当点该按钮时会弹出一个confirm对话框询问“确定删除吗?”,如果点击确定则执行button的Button_Click事件，如果点击取消则不执行。
你可以查看他生成的html代码，以加深对该控件工作原理的理解
完整的代码如下：
using System;

using System.Web.UI;

using System.Web.UI.WebControls;

using System.ComponentModel;

using System.Text;



namespace AspxBoy.Com.ConfirmButton

{

/// &amp;lt;summary&amp;gt;

/// Button点击时会弹出一个对话框要求确认</description>
    </item>
    
  </channel>
</rss>