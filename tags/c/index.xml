<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on 武眉博</title>
    <link>https://huobazi.aspxboy.com/tags/c/</link>
    <description>Recent content in C# on 武眉博</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 06 Aug 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://huobazi.aspxboy.com/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>不改程序, 创建同一个程序不同服务名的方法</title>
      <link>https://huobazi.aspxboy.com/blog/2009/08/06/mulit-window-service-one-exe/</link>
      <pubDate>Thu, 06 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.aspxboy.com/blog/2009/08/06/mulit-window-service-one-exe/</guid>
      <description>&lt;p&gt;&lt;p&gt;以往写windows service都需要个ProjectInstaller和serviceInstaller并配置serviceName，这样build出来的exe在install成windows service时我们会：&lt;/p&gt;
&lt;pre&gt;@echo 安装WindowService
@Set Path=C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727;
@Set svn_dir=%cd%
installutil %svn_dir%\MyServiceDemo.exe
pause
@echo 成功！&lt;/pre&gt;
&lt;p&gt;但服务名被我们编译在程序里了，如果这个exe想被装很多次服务怎么办呢？&lt;br /&gt;今天从同事Martin Jia那里学来一个好方法，可以不用ProjectInstaller、serviceInstaller这种东西，直接安装exe为windows service并在安装时指定服务名称&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asp.Net发邮件，如何发送附件</title>
      <link>https://huobazi.aspxboy.com/blog/2009/07/21/how-to-send-an-email-with-attachments/</link>
      <pubDate>Tue, 21 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.aspxboy.com/blog/2009/07/21/how-to-send-an-email-with-attachments/</guid>
      <description>&lt;p&gt;&lt;p&gt;使用如下代码可以发送附件&lt;/p&gt;
&lt;pre&gt;MailMessage mail = new MailMessage();
mail.To = &amp;rdquo;me@mycompany.com&amp;rdquo;;
mail.From = &amp;rdquo;you@yourcompany.com&amp;rdquo;;
mail.Subject = &amp;rdquo;this is a test email.&amp;ldquo;;
mail.Body = &amp;rdquo;this is my test email body.&amp;ldquo;;
MailAttachment attachment = new MailAttachment( Server.MapPath( &amp;rdquo;mailTest.txt&amp;rdquo; ) ); //create the attachment
mail.Attachments.Add( attachment );
SmtpMail.SmtpServer = &amp;rdquo;localhost&amp;rdquo;; 
SmtpMail.Send( mail );&lt;/pre&gt;
&lt;p&gt;使用如下代码可以在用户上传附件后发生邮件:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>知识死角,name相同的html element</title>
      <link>https://huobazi.aspxboy.com/blog/2009/07/17/same-name-element-in-one-page/</link>
      <pubDate>Fri, 17 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.aspxboy.com/blog/2009/07/17/same-name-element-in-one-page/</guid>
      <description>&lt;p&gt;&lt;p&gt;今天在帮同事调程序时发现了这个死角&lt;br /&gt;现象如下，没有任何输入的textarea提交到服务端后得到的值总是&amp;rdquo;,&amp;rdquo;&lt;br /&gt;找了半天发现是因为页面上两个textarea的name相同，以前只知道页面上radio的name相同则是一个组，name相同的&lt;br /&gt;的checkbox提交后是以逗号分隔值的，于是做了下面代码的试验，发现任何name相同的element提交到服务端都会得到逗号分隔的值，以前还不知道这个，汗&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C#中如何深度克隆一个对象？</title>
      <link>https://huobazi.aspxboy.com/blog/2009/07/15/make-a-deep-clone-of-the-object/</link>
      <pubDate>Wed, 15 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.aspxboy.com/blog/2009/07/15/make-a-deep-clone-of-the-object/</guid>
      <description>&lt;p&gt;&lt;p&gt;如何深度克隆一个对象？&lt;/p&gt;
&lt;p&gt;普通版:&lt;/p&gt;
&lt;pre&gt;
        public static object CloneObject( object obj )
        {
            using ( MemoryStream memStream = new MemoryStream( ) )
            {
                BinaryFormatter binaryFormatter = new BinaryFormatter( null ,
                     new StreamingContext( StreamingContextStates.Clone ) );
                binaryFormatter.Serialize( memStream , obj );
                memStream.Seek( 0 , SeekOrigin.Begin );
                return binaryFormatter.Deserialize( memStream );
            }
        }
&lt;/pre&gt;
&lt;p&gt;泛型版：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>撞墙吧 Array.IndexOf(xxx)</title>
      <link>https://huobazi.aspxboy.com/blog/2004/09/18/cb-44424/</link>
      <pubDate>Sat, 18 Sep 2004 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.aspxboy.com/blog/2004/09/18/cb-44424/</guid>
      <description>要在后台把CheckBoxList的某个ListItem 的selected给true了
遍历该CheckBoxList,写下了下面注释内的代码，死活不能选中我的第个CheckBox

 stringbigClassId =( ( DataRowView)e.Item.DataItem )[&amp;ldquo;模块编号&amp;ldquo;].ToString();
stringbigClassName =( ( DataRowView)e.Item.DataItem )[&amp;ldquo;模块名称&amp;ldquo;].ToString();
CheckBoxList chk_list_big =(CheckBoxList)e.Item.FindControl(&amp;ldquo;chk_list_big&amp;ldquo;) asCheckBoxList;
if(chk_list_big !=null)
{ chk_list_big.Items.Clear();
ListItem item =newListItem();
item.Text =bigClassName;
item.Value =bigClassId;
chk_list_big.Items.Add(item);
chk_list_big.Attributes[&amp;ldquo;onclick&amp;ldquo;] =String.Format(&amp;ldquo;CheckAll(&amp;lsquo;{0}&amp;rsquo;)&amp;ldquo;,chk_list_big.ClientID);
//将符合用户模块的ListItem选定 for(inti=0; i&amp;lt;this.taxiUser.Modules.Length; i++)
{
if( bigClassId ==this.taxiUser.Modules[i] )
{
chk_list_big.Items.FindByValue(this.taxiUser.Modules[i]).Selected =true;
}} //真是见了鬼了！为什么用这样的方法不能选定该ListItem？？？
//foreach(ListItem listItem in chk_list_big.Items)
//{
//if(Array.IndexOf(this.taxiUser.Modules,listItem.Value) &amp;gt; 0)
//{
//listItem.Selected = true;
//}
//}
半天不能醒悟就想着换道道，写了”该死”那行上面的几行代码把数组放倒来，（站着不行我就躺着来），发现可行，然后就开始发楞，命名原理一摸一样的啊，真是“见鬼”，对者这几行代码发了会愣，就决定还要狠狠的，
if (Array.IndexOf(xxxxx) &amp;gt; 0) 用力吧555555，撞的头都疼了.</description>
    </item>
    
    <item>
      <title>疑惑 关于 多条件判断语句 的写法</title>
      <link>https://huobazi.aspxboy.com/blog/2004/08/21/cb-35432/</link>
      <pubDate>Sat, 21 Aug 2004 00:00:00 +0000</pubDate>
      
      <guid>https://huobazi.aspxboy.com/blog/2004/08/21/cb-35432/</guid>
      <description>写法1
if ( 条件1 &amp;amp;&amp;amp; 条件2)
{
//代码
}
写法2
if ( 条件1 )
{
if( 条件2 )
{
//代码
}
}
我一直认为写法1要比写法2条理清晰,容易阅读.
不知其他人如何认为呢?
今天在微软的KB中阅读 使用 Visual Basic .NET 在采用基于表单身份验证的 ASP.NET 应用程序中实现基于角色的安全性 的时候
发现这样的写法
 publicvoidApplication_AuthenticateRequest( Object src , EventArgs e )
{
if(!(HttpContext.Current.User ==null))
{
if(HttpContext.Current.User.Identity.AuthenticationType ==&#34;Forms&#34;)
{
System.Web.Security.FormsIdentity id;
id =(System.Web.Security.FormsIdentity)HttpContext.Current.User.Identity;
String[] myRoles =newString[2];
myRoles[0] =&#34;Manager&#34;;
myRoles[1] =&#34;Admin&#34;;
HttpContext.Current.User =newSystem.Security.Principal.GenericPrincipal(id,myRoles);
}}}  
 
而且这则KB的VB版本也是这样的写的.
这样写有优越性?</description>
    </item>
    
  </channel>
</rss>